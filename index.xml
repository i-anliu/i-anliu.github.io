<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>An Liu</title>
    <link>http://0.0.0.0/</link>
      <atom:link href="http://0.0.0.0/index.xml" rel="self" type="application/rss+xml" />
    <description>An Liu</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Wed, 09 Sep 2020 13:43:40 +0800</lastBuildDate>
    <image>
      <url>http://0.0.0.0/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>An Liu</title>
      <link>http://0.0.0.0/</link>
    </image>
    
    <item>
      <title>Experience</title>
      <link>http://0.0.0.0/experience/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/experience/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Algorithm Design</title>
      <link>http://0.0.0.0/lectures/algo_course/</link>
      <pubDate>Wed, 09 Sep 2020 13:43:40 +0800</pubDate>
      <guid>http://0.0.0.0/lectures/algo_course/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;作业提交服务器：ftp://192.168.126.193&lt;/p&gt;
&lt;p&gt;用户名：stu&lt;/p&gt;
&lt;p&gt;密码：stu1234&lt;/p&gt;
&lt;p&gt;❗注意事项&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;请将需要提交的材料打包成zip文件，用自己的学号命名，上传至对应的文件夹中（比如第一次作业上传至Homework1中）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;涉及伪代码和数学公式的作业，推荐大家使用在线$\LaTeX$编辑器
&lt;a href=&#34;https://www.overleaf.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Overleaf&lt;/a&gt;完成，提交编译生成的pdf文档即可。如果需要在overleaf中输入中文并能正确编译，首先在文档中加入package:&lt;code&gt;\usepackage[UTF8]{ctex}&lt;/code&gt;，然后修改设置：设置-&amp;gt;修改Latex引擎-&amp;gt;选择“XeLatex”&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;Thanks 
&lt;a href=&#34;https://www.cs.princeton.edu/~wayne/contact/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kevin Wayne&lt;/a&gt; for sharing his slides with us.&lt;/p&gt;
&lt;p&gt;If you want more slides, please go to 
&lt;a href=&#34;https://www.cs.princeton.edu/~wayne/kleinberg-tardos/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lecture Slides for Algorithm Design&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TOPIC&lt;/th&gt;
&lt;th&gt;SLIDES&lt;/th&gt;
&lt;th&gt;READINGS&lt;/th&gt;
&lt;th&gt;DEMOS&lt;/th&gt;
&lt;th&gt;HOMEWORK&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;00 Introduction&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/algo/00Introduction.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;01 Stable Matching&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/algo/01StableMatching.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/algo/01DemoGaleShapley.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/algo/Homework1.zip&#34; target=&#34;_blank&#34;&gt;Homework1&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02 Algorithm Analysis&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/algo/02AlgorithmAnalysis.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/algo/02DemoBinarySearch.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/algo/Homework2.pdf&#34; target=&#34;_blank&#34;&gt;Homework2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03 Graphs&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/algo/03Graphs.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/algo/03DemoGraphSearch.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Personalized Geographical Influence Modeling for POI Recommendation</title>
      <link>http://0.0.0.0/publication/is2020-early/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/publication/is2020-early/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Representation Learning with Multi-level Attention for Activity Trajectory Similarity Computation</title>
      <link>http://0.0.0.0/publication/tkde2020-early/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/publication/tkde2020-early/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SRA: Secure Reverse Auction for Task Assignment in Spatial Crowdsourcing</title>
      <link>http://0.0.0.0/publication/tkde2020/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/publication/tkde2020/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Reinforcement Learning Based Monte Carlo Tree Search for Temporal Path Discovery</title>
      <link>http://0.0.0.0/publication/icdm2019/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/publication/icdm2019/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Python Programming</title>
      <link>http://0.0.0.0/lectures/python_course/</link>
      <pubDate>Wed, 09 Oct 2019 13:43:40 +0800</pubDate>
      <guid>http://0.0.0.0/lectures/python_course/</guid>
      <description>&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TOPIC&lt;/th&gt;
&lt;th&gt;SLIDES&lt;/th&gt;
&lt;th&gt;HOMEWORK&lt;/th&gt;
&lt;th&gt;DEMOS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01 - 基础知识&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/01%20-%20%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href=&#34;http://0.0.0.0/homework/python/1&#34;&gt;Homework 1&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02 - 列表&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/02%20-%20%e5%88%97%e8%a1%a8-%e5%9f%ba%e7%a1%80%e6%a6%82%e5%bf%b5.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href=&#34;http://0.0.0.0/homework/python/2&#34;&gt;Homework 2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02a - 元组&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/02a%20-%20%e5%85%83%e7%bb%84.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02b - 输入输出&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/02b%20-%20%e8%be%93%e5%85%a5%e8%be%93%e5%87%ba.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03 - 条件与循环&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/03%20-%20%e6%9d%a1%e4%bb%b6%e4%b8%8e%e5%be%aa%e7%8e%af.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href=&#34;http://0.0.0.0/homework/python/3&#34;&gt;Homework 3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04 - 列表-进阶应用&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/04%20-%20%e5%88%97%e8%a1%a8-%e8%bf%9b%e9%98%b6%e5%ba%94%e7%94%a8.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href=&#34;http://0.0.0.0/homework/python/4&#34;&gt;Homework 4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05 - 函数 - 基础知识与递归&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/05%20-%20%e5%87%bd%e6%95%b0%20-%20%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86%e4%b8%8e%e9%80%92%e5%bd%92.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href=&#34;http://0.0.0.0/homework/python/5&#34;&gt;Homework 5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06 - 字符串 - 基本方法&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/06%20-%20%e5%ad%97%e7%ac%a6%e4%b8%b2%20-%20%e5%9f%ba%e6%9c%ac%e6%96%b9%e6%b3%95.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;07 - 字典&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/07%20-%20%e5%ad%97%e5%85%b8.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;08 - 函数 - 作用域、参数传递和进阶应用&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/08%20-%20%e5%87%bd%e6%95%b0%20-%20%e4%bd%9c%e7%94%a8%e5%9f%9f%e3%80%81%e5%8f%82%e6%95%b0%e4%bc%a0%e9%80%92%e5%92%8c%e8%bf%9b%e9%98%b6%e5%ba%94%e7%94%a8.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;09 - 集合&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/09%20-%20%e9%9b%86%e5%90%88.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10 - 正则表达式&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/10%20-%20%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11 - 文件&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/11%20-%20%e6%96%87%e4%bb%b6.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12 - 异常&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/12%20-%20%e5%bc%82%e5%b8%b8.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Python Programming</title>
      <link>http://0.0.0.0/lectures/python_course_1/</link>
      <pubDate>Wed, 09 Oct 2019 13:43:40 +0800</pubDate>
      <guid>http://0.0.0.0/lectures/python_course_1/</guid>
      <description>&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TOPIC&lt;/th&gt;
&lt;th&gt;SLIDES&lt;/th&gt;
&lt;th&gt;HOMEWORK&lt;/th&gt;
&lt;th&gt;DEMOS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;01 - 基础知识&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/01%20-%20%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;a href=&#34;http://0.0.0.0/lectures/python_hm/hm1&#34;&gt;Homework 1&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02 - 列表&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/02%20-%20%e5%88%97%e8%a1%a8-%e5%9f%ba%e7%a1%80%e6%a6%82%e5%bf%b5.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02a - 元组&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/02a%20-%20%e5%85%83%e7%bb%84.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;02b - 输入输出&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/02b%20-%20%e8%be%93%e5%85%a5%e8%be%93%e5%87%ba.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;03 - 条件与循环&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/03%20-%20%e6%9d%a1%e4%bb%b6%e4%b8%8e%e5%be%aa%e7%8e%af.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;04 - 列表-进阶应用&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/04%20-%20%e5%88%97%e8%a1%a8-%e8%bf%9b%e9%98%b6%e5%ba%94%e7%94%a8.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05 - 函数 - 基础知识与递归&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/05%20-%20%e5%87%bd%e6%95%b0%20-%20%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86%e4%b8%8e%e9%80%92%e5%bd%92.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;06 - 字符串 - 基本方法&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/06%20-%20%e5%ad%97%e7%ac%a6%e4%b8%b2%20-%20%e5%9f%ba%e6%9c%ac%e6%96%b9%e6%b3%95.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;07 - 字典&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/07%20-%20%e5%ad%97%e5%85%b8.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;08 - 函数 - 作用域、参数传递和进阶应用&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/08%20-%20%e5%87%bd%e6%95%b0%20-%20%e4%bd%9c%e7%94%a8%e5%9f%9f%e3%80%81%e5%8f%82%e6%95%b0%e4%bc%a0%e9%80%92%e5%92%8c%e8%bf%9b%e9%98%b6%e5%ba%94%e7%94%a8.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;09 - 集合&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/09%20-%20%e9%9b%86%e5%90%88.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10 - 正则表达式&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/10%20-%20%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11 - 文件&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/11%20-%20%e6%96%87%e4%bb%b6.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12 - 异常&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://0.0.0.0/files/python_course/12%20-%20%e5%bc%82%e5%b8%b8.pdf&#34; target=&#34;_blank&#34;&gt;link&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>DMRAN: A Hierarchical Fine-Grained Attention-Based Network for Recommendation</title>
      <link>http://0.0.0.0/publication/ijcai2019/</link>
      <pubDate>Sat, 10 Aug 2019 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/publication/ijcai2019/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Efficient task assignment in spatial crowdsourcing with worker and task privacy protection</title>
      <link>http://0.0.0.0/publication/geo2018/</link>
      <pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/publication/geo2018/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0/homework/python/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/homework/python/1/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;假设a和b是整数。描述下列语句的功能，并绘制变量和对象的引用图。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;a=3
b=5
t=a
a=b
b=t
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;编写一个函数，产生5个取值范围是0.0到1.0之间均匀分布的随机数，计算并返回它们的平均值、最小值和最大值。可以使用内置函数&lt;code&gt;max()&lt;/code&gt;和&lt;code&gt;min()&lt;/code&gt;。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func2():
	# your code here
	return avg, min_v, max_v
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;正$n$边形的面积等于$\frac{n\times s^2}{4 \times \tan{\frac{\pi}{n}}}$，其中$s$是其边长。编写一个函数，输入参数是2个数，分别代表边数$n$和边长$s$，返回该多边形的面积。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func3(n, s):
	# your code here
	return
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是三个正整数，如果其中任意一个数大于或者等于另两个数之和，返回False，否则返回True。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func4(a, b, c):
	# your code here
	return
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;三角形的面积可以由其边长确定。假设三条边长分别是$a,b,c$，那么面积$a=\sqrt{s\times(s-a)\times(s-b)\times(s-c)}$，其中$s=(a+b+c)/2$。编写一个函数，输入参数是三个正整数，分别代表一个三角形的三条边长，返回这个三角形的面积。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func5(a, b, c):
	# your code here
	return
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是三个正整数，如果这三个数可以满足构成三角形三条边的关系，那么返回这个三角形的面积，否则返回0。注意代码复用，也就是使用上面编写的函数来实现本题。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func6(a, b, c):
	# your code here
	return
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是三个数，按照从小到大的关系返回这三个数。比如输入是3，-5，1，那么返回-5，1，3。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func7(a, b, c):
	# your code here
	return a, b, c # assume a &amp;lt;= b &amp;lt;= c
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0/homework/python/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/homework/python/2/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;构造合适的range对象，生成下列序列：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;50, 60, 70, 80&lt;/li&gt;
&lt;li&gt;8, 6, 4, 2, 0, -2, -4, -6, -8&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;使用列表推导，生成下列列表：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;[1, 2, 4, 8, 16, 32, 64, 128]&lt;/li&gt;
&lt;li&gt;[0, 2, 6, 12, 20, 30, 42, 56]&lt;/li&gt;
&lt;li&gt;[1, -3, 5, -7, 9, -11, 13, -15]&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;使用列表推导，在不输入所有26个英文字母的情况下产生列表[&amp;lsquo;a&amp;rsquo;, &amp;lsquo;b&amp;rsquo;, &amp;lsquo;c&amp;rsquo;, &amp;hellip;, &amp;lsquo;z&amp;rsquo;]。提示：可以使用内置函数&lt;code&gt;chr()&lt;/code&gt;和&lt;code&gt;ord()&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是一个字符串，返回其中元音字母的个数。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是两个列表$a$和$b$，返回列表$c$，其第$i$个元素$c[i]=a[i]\times b[i]$。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是两个列表$a$和$b$，以列表返回它们的公共元素。比如当$a$=[1, 2, 3]，$b$=[2, 3, 4]时，返回列表$c$=[2, 3]。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是一个整数列表$L$和一个整数$t$，如果$t$不在$L$中，返回$L$，否则将$t$前面的元素和后面的元素分别反转，返回反转后的$L$。比如当$L$=[1, 2, 3, 4, 5, 6]，$t$=4时，反转后的列表是[3, 2, 1, 4, 6, 5]。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0/homework/python/3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/homework/python/3/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;三角形可以分成三类：等边三角形，等腰三角形和不等边三角形。编写一个函数，输入参数是三个正整数，如果这三个数可以满足构成三角形三条边的关系，则返回这个三角形的类型：等边三角形返回1，等腰三角形返回2，不等边三角形返回3；否则，返回None&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;假设Spring的第一天是March 20，Summer的第一天是June 21，Autumn的第一天是September 22，Winter的第一天是December 21。编写一个函数，输入参数是一个字符串month和一个整数day，返回month和day表示的季节。比如输入是June和20，返回Spring。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是一个正整数，如果该数是质数，返回True，否则返回False。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是一个正整数，返回该数所有的数字之和。比如输入是12345，那么返回15。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是三个正整数，返回这三个数的最小公倍数。比如输入是2, 3, 8，那么返回24。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0/homework/python/4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/homework/python/4/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;编写一个函数，输入参数是一个列表和一个数$t$，如果列表中没有数是$t$的倍数，返回True，否则返回False。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是两个列表，以列表的形式返回这两个列表的公共元素。比如输入[1, 2, 3, 4, 5]和[2, 3, 5, 7, 11]，那么返回列表[2, 3, 5]。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是一个列表和一个数$t$，返回该列表中最大的能整除$t$的数。比如输入列表是[3, 6, 2, 9, 12]，$t$等于18，那么返回9。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;如果一个字符串正读和反读是一样的，那么称其是回文串。比如’ada’就是一个回文串。编写一个函数，输入参数是一个字符串，如果它是回文串，返回True，否则返回False。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;串中任意个连续的字符组成的子序列称为该串的子串。比如’ab’就是’cab’的子串，但不是’acb’的子串。编写一个函数，输入参数是两个字符串$A$和$B$，如果$B$是$A$的子串，返回True，否则返回False。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0/homework/python/5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/homework/python/5/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;编写一个函数，输入参数是一个正整数$n$，返回第一个大于$n$的质数。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;如果一个正整数$n$的所有因子（不包括其本身）之和等于$n$，称该数是完美数。比如28的所有因子之和是1+2+4+7+14=28，所以它是一个完美数。编写一个函数，输入参数是一个正整数，如果其是完美数，返回True，否则返回False。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;一个正整数的密度定义为其各位数字的和与其位数的商。比如1234的密度是(1+2+3+4)/4=2.5。编写一个函数，输入参数是一个正整数，返回该数的密度。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是一个整数列表，返回该列表中出现次数最多的数以及它的出现次数。比如输入列表是[1,2,3,2,3,4,3,4,5]，那么返回(3, 3)，因为数字3出现次数最多，共出现了3次。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;斐波那契数列的前两项是1和1，后面每项都是其前两项的和，即1,1,2,3,5,8,13,21,…。编写一个函数，输入参数是正整数$n$，返回斐波那契数列前$n$项的和。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是两个正整数$a$和$n$，返回$S_n=a+aa+\cdots+\overbrace{a\cdots a}^{n}$的值。比如当$a$=3，$n$=5时，返回值为3+33+333+3333+33333=37035&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;如果一个质数倒过来写仍然是一个质数，那么称其是反质数。比如17倒过来写是71，且两者均为质数，所以17和71都是反质数。编写一个函数，输入参数是一个正整数$n$，以列表的形式返回前$n$个反质数。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是一个整数列表，将其按照整数的因子个数从大到小排序，如果因子个数相等，则按照整数自然大小升序排序，返回排序后的列表。比如输入列表是[14, 12, 6]，返回列表是[12, 6, 14] 。因为14有3个因子（1, 2, 7），12有5个因子（1, 2, 3, 4, 6），6有3个因子（1, 2, 3）。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;如果一个字符串可以通过重新排列另一个字符串的字符得到，称这两个字符串同构。比如字符串cat和act同构，字符串leader和dealer同构。编写一个函数，输入参数是两个由小写字符组成的字符串，如果它们是同构的，返回True，否则返回False。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是一个字符串列表，将其中同构的字符串删除，返回删除后的列表。比如输入列表是[‘cat’, ‘leader’, ‘bus’, ‘act’, ‘dealer’, ‘but’]，返回列表是[‘bus’, ‘but’]。因为cat和act同构，leader和dealer同构。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0/lectures/python_hm/hm1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://0.0.0.0/lectures/python_hm/hm1/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;假设a和b是整数。描述下列语句的功能，并绘制变量和对象的引用图。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;a=3
b=5
t=a
a=b
b=t
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;编写一个函数，产生5个取值范围是0.0到1.0之间均匀分布的随机数，计算并返回它们的平均值、最小值和最大值。可以使用内置函数&lt;code&gt;max()&lt;/code&gt;和&lt;code&gt;min()&lt;/code&gt;。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func2():
	# your code here
	return avg, min_v, max_v
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;正$n$边形的面积等于$\frac{n\times s^2}{4 \times \tan{\frac{\pi}{n}}}$，其中$s$是其边长。编写一个函数，输入参数是2个数，分别代表边数$n$和边长$s$，返回该多边形的面积。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func3(n, s):
	# your code here
	return
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是三个正整数，如果其中任意一个数大于或者等于另两个数之和，返回False，否则返回True。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func4(a, b, c):
	# your code here
	return
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;三角形的面积可以由其边长确定。假设三条边长分别是$a,b,c$，那么面积$a=\sqrt{s\times(s-a)\times(s-b)\times(s-c)}$，其中$s=(a+b+c)/2$。编写一个函数，输入参数是三个正整数，分别代表一个三角形的三条边长，返回这个三角形的面积。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func5(a, b, c):
	# your code here
	return
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是三个正整数，如果这三个数可以满足构成三角形三条边的关系，那么返回这个三角形的面积，否则返回0。注意代码复用，也就是使用上面编写的函数来实现本题。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func6(a, b, c):
	# your code here
	return
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;编写一个函数，输入参数是三个数，按照从小到大的关系返回这三个数。比如输入是3，-5，1，那么返回-5，1，3。函数框架如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def func7(a, b, c):
	# your code here
	return a, b, c # assume a &amp;lt;= b &amp;lt;= c
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
